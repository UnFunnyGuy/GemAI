name: 📱 Release APK

on:
  push:
    tags: ['*']  # Trigger on any tag push

jobs:
  build-and-release:
    name: 🛠️ Build and Release APK
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
      security-events: write

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: ☕ Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: 🔧 Configure Gradle
        run: chmod +x ./gradlew

      - name: 💾 Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🏷️ Extract Version
        id: version
        run: |
          echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: 🔐 Build Signed APK
        run: |
          # Decode keystore from base64
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ${GITHUB_WORKSPACE}/keystore.jks
          
          # Build release APK with signing configuration
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=${GITHUB_WORKSPACE}/keystore.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: 📝 Generate Changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo '')
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous tag exists, get all commits
            CHANGES=$(git log --pretty=format:'- %s')
          else
            # Get commits since last tag
            CHANGES=$(git log --pretty=format:'- %s' $PREVIOUS_TAG..HEAD)
          fi
          echo "CHANGELOG=$CHANGES" >> $GITHUB_OUTPUT

      - name: 🚀 Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/release/*.apk
          name: 📱 Release ${{ steps.version.outputs.VERSION }}
          body: |
            🎉 New Release ${{ steps.version.outputs.VERSION }}
            
            📋 Changelog:
            ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
          generate_release_notes: true